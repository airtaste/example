/*
 * Copyright (c) 2020 Transparent Language. All rights reserved.
 */
package com.example.demo.domain

import groovy.transform.Canonical
import groovy.transform.EqualsAndHashCode
import groovy.transform.Immutable
import org.springframework.data.annotation.Id
import org.springframework.data.annotation.Version
import org.springframework.data.mongodb.core.index.CompoundIndex
import org.springframework.data.mongodb.core.index.CompoundIndexes
import org.springframework.data.mongodb.core.index.Indexed
import org.springframework.data.mongodb.core.mapping.Document
import org.springframework.data.mongodb.core.mapping.Field

/**
 * Data generated by using an activity inside a lesson.
 */
@Document
@Canonical
@EqualsAndHashCode( excludes = ['id', 'version'] )
@CompoundIndexes( [
        @CompoundIndex( name = 'optimistic_concurrency_idx', def = "{ '_id': 1, 'version': 1 }" ),
        @CompoundIndex( name = 'user_id_lesson_id_date_idx', def = "{ 'external-user-id': 1, 'lesson-id': 1, 'date-code': 1 }" )
] )
class LessonActivity {

    @Field( FieldNames.MIME_TYPE )
    String mimeType = 'application/bson'

    @Id
    @Field( FieldNames.ID )
    String id

    @Version
    @Field( FieldNames.VERSION )
    Long version

    @Field( FieldNames.DATE_CODE )
    long dateCode

    @Field( FieldNames.LESSON_ID )
    UUID lessonId

    @Field( FieldNames.NAME )
    UUID name

    @Indexed
    @Field( FieldNames.USER_ID )
    UUID userId

    @Field( FieldNames.DURATION )
    long duration

    @Immutable
    static final class FieldNames {
        public static final String MIME_TYPE = 'mime-type'
        public static final String ID = '_id'
        public static final String VERSION = 'version'
        public static final String DATE_CODE = 'date-code'
        public static final String LESSON_ID = 'lesson-id'
        public static final String NAME = 'name'
        public static final String USER_ID = 'user-id'
        public static final String DURATION = 'duration'
    }
}
